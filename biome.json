{
  "$schema": "node_modules/@biomejs/biome/configuration_schema.json",
  "files": {
    "ignoreUnknown": true,
    "ignore": [".next/**/*"]
  },
  "vcs": {
    "enabled": true,
    "clientKind": "git",
    "useIgnoreFile": true,
    "defaultBranch": "main"
  },
  "linter": {
    "enabled": true,
    "rules": {
      "recommended": true,
      "complexity": {
        "noUselessStringConcat": "error",
        "noUselessUndefinedInitialization": "error",
        "useDateNow": "error",
        "useSimplifiedLogicExpression": "error"
      },
      "correctness": {
        "noConstantMathMinMaxClamp": "error",
        "noNewSymbol": "error",
        "noUndeclaredVariables": "error",
        "noUnusedFunctionParameters": "error",
        "noUnusedImports": "error",
        "noUnusedPrivateClassMembers": "error",
        "noUnusedVariables": "error",
        "useArrayLiterals": "error",
        "useHookAtTopLevel": "error"
      },
      "performance": {
        "noBarrelFile": "error",
        "noReExportAll": "error",
        "useTopLevelRegex": "error"
      },
      "style": {
        "noNamespaceImport": "error",
        "noYodaExpression": "error",
        "useCollapsedElseIf": "error",
        "useConsistentArrayType": "error",
        "useConsistentBuiltinInstantiation": "error",
        "useForOf": "error",
        "useFragmentSyntax": "error",
        "useNodeAssertStrict": "error",
        "useShorthandArrayType": "error",
        "useShorthandAssign": "error",
        "useThrowNewError": "error",
        "useThrowOnlyError": "error"
      },
      "suspicious": {
        "noEmptyBlockStatements": "error",
        "noEvolvingTypes": "error",
        "noMisplacedAssertion": "error",
        "useAwait": "error",
        "useErrorMessage": "error",
        "useNumberToFixedDigitsArgument": "error"
      },
      "nursery": {
        "noDuplicateCustomProperties": "error",
        "noDuplicateElseIf": "error",
        "noDynamicNamespaceImportAccess": "error",
        "noEnum": "error",
        "noIrregularWhitespace": "error",
        "noUselessEscapeInRegex": "error",
        "noValueAtRule": "error",
        "useAdjacentOverloadSignatures": "error",
        "useAriaPropsSupportedByRole": "error",
        "useConsistentMemberAccessibility": "error",
        "useTrimStartEnd": "error"
      }
    }
  },
  "formatter": {
    "enabled": true,
    "lineWidth": 160,
    "indentStyle": "space"
  },
  "organizeImports": {
    "enabled": false
  },
  "javascript": {
    "formatter": {
      "arrowParentheses": "asNeeded",
      "jsxQuoteStyle": "single",
      "quoteStyle": "single"
    }
  }
}
